$global-value: 50px;
$parent-name: '.main';
$img-path: './img/';


.main {
  $scope-value: 50px;

  font-size: 20px;
  &-content {
  font-size: 10px;
  }

  width: 500px;
 height: 500px;
 margin: $scope-value;
 padding: $scope-value;
 background: #333;
 }
 
 .sub {
  width: 500px;
  height: 500px;
  margin: $global-value;
  padding: $global-value;
  background: #333;
 }
 
 #{parent-name} {
  $scope-value: 50px;
  width: 500px;
  height: 500px;
  margin: $scope-value;
  padding: $scope-value;
  background: #333;
  // 画像は⽤意してないのでコメントアウトしています
  // background: url(${$img-path}img.png);
 }

//  .sassTest {
//   // ⾜し算
//   width: 500px + 100;
//   // 引き算
//   width: 700px - 100;
//   // 掛け算
//   width: 5px * 2;
//   // 割り算
//   width: (20px / 2);
//   // 割り算のあまり
//   width: 10px % 3;
//  }
 
 //継承
 .is-flex {
  display: flex;
 }
 .main-box {
  width: 300px;
  height: 300px;
  background: #ff0000;
 }
 .mini-box-area {
  width: 100px;
  height: 100px;
 }
 .sub-box {
  position: relative;
  @extend .main-box;
  @extend .is-flex;
  &-content {
  position: absolute;
  top: 0;
  left: 0;
  background: #0008f3;
  @extend .mini-box-area;
  }
 }

//メディアクエリの継承
 @media screen and (max-width: 1199px) {
  .main-box_media {
    width: 300px;
    height: 300px;
    background: #ff0000;
   }
  .sub-box {
  @extend .main-box_media;
  background: #fff000;
  }
 }
 
// Mixin
//  @mixin boxContent($value: 300px, $margin: 0 auto, $padding: 0) {
//   width: $value;
//   height: $value;
//   margin: $margin;
//   padding: $padding;
//  }
 .main-boxM {
  @mixin boxContent($value: 300px, $margin: 0 auto, $padding: 0) {
    width: $value;
    height: $value;
    margin: $margin;
    padding: $padding;
   }
  background: #ff0000;

  .sub-boxM {
    @include boxContent(200px, 0 50px, 20px);
    background: #0011ff;
   }
 }
//  .sub-boxM {
//   @include boxContent(200px, 0 50px, 20px);
//   background: #0011ff;
//  }
 
// content
@mixin media($media-width: 768px) {
  @media screen and (max-width: $media-width) {
  @content
  }
 }
 .item {
  image {
  float: left;
  // SP版
  @include media {
  float: none;
  }
  }
  .text {
  overflow: hidden;
  margin-left: 15px;
  // SP版
  @include media {
  margin-left: 0;
  }
  }
 }
 
// if(条件分岐)
 $bgColor: 1;
@if $bgColor == 0 {
 .bg-color {
 background-color: red;
 }
}
@else if $bgColor == 1 {
 .bg-color {
 background-color: blue;
 }
}
@else {
 .bg-color {
 background-color: green;
 }
}

// forとwhile（繰り返し処理）
@for $value from 1 through 3 {
  .through-sample-#{$value * 10} {
  margin: 10px * $value;
  }
 }
 @for $value from 1 to 3 {
  .to-sample-#{$value * 10} {
  margin: 10px * $value;
  }
 }
 
 $value: 20;
@while $value > 0 {
 .while-sample-#{$value} {
 margin: $value + px;
 }
 $value: $value - 10;
}

// 配列
$bgColor:#acc1ed,#dc7668,#71d0f2;
// オブジェクト
$map: (
 "header": #acc1ed,
 "main": #dc7668,
 "footer": #71d0f2,
);
@each $key, $value in $map {
  .#{$key}-bg-color {
  background: $value;
  }
 }
 
//  コンソールに対象の中身を表示
 @debug $global-value;